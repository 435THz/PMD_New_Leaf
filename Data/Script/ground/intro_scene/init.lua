--[[
    init.lua
    Created: 11/19/2023 20:25:11
    Description: Autogenerated script file for the map intro_scene.
]]--
-- Commonly included lua functions and data
require 'common'
require 'menu.character_menu'

-- Package name
local intro_scene = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------
---intro_scene.Init(map)
--Engine callback function
function intro_scene.Init(map)

    --This will fill the localized strings table automatically based on the locale the game is
    -- currently in. You can use the MapStrings table after this line!
    MapStrings = COMMON.AutoLoadLocalizedStrings()

end

---intro_scene.Enter(map)
--Engine callback function
function intro_scene.Enter(map)
    intro_scene.PlotScripting()
    GAME:FadeIn(20)
end

---intro_scene.Exit(map)
--Engine callback function
function intro_scene.Exit(map)


end

---intro_scene.Update(map)
--Engine callback function
function intro_scene.Update(map)


end

---intro_scene.GameSave(map)
--Engine callback function
function intro_scene.GameSave(map)


end

---intro_scene.GameLoad(map)
--Engine callback function
function intro_scene.GameLoad(map)
    intro_scene.PlotScripting()
    GAME:FadeIn(20)
end

-------------------------------
-- Entities Callbacks
-------------------------------

function intro_scene.PlotScripting()
    if not SV.Intro.CharacterCreated then
        intro_scene.CharacterSelect()
    elseif not SV.Intro.HubReached then
        GROUND:EnterGroundMap('Map???', 'Entrance????') --TODO fail safe. If player somehow gets to the intro_scene after creating the character, warp them to intro dungeon entrance.
    else
        GROUND:EnterGroundMap('Map???', 'Entrance????') --TODO fail safe. If player somehow gets to the intro_scene after beating the intro dungeon, warp them to current village map.
    end
end

function intro_scene.CharacterSelect()
    GAME:CutsceneMode(true)
    UI:ResetSpeaker()
    SOUND:FadeOutBGM()

    --move camera to arbitrary position. Partner and hero will spawn in at 0,0 when they're created, so this is done to hide that without extra hassle.
	GAME:MoveCamera(300, 300, 1, false)

	--initialize some save data
	_DATA.Save.ActiveTeam:SetRank("unranked")
	_DATA.Save.ActiveTeam.Money = 0
	_DATA.Save.ActiveTeam.Bank = 0
	_DATA.Save.NoSwitching = true--switching is not allowed

	--remove any team members that may exist by default for some reason
--[[	local party_count = _DATA.Save.ActiveTeam.Players.Count
	for ii = 1, party_count, 1 do
		_DATA.Save.ActiveTeam.Players:RemoveAt(0)
	end

	local assembly_count = GAME:GetPlayerAssemblyCount()
	for i = 1, assembly_count, 1 do
	   _DATA.Save.ActiveTeam.Assembly.RemoveAt(i-1)--not sure if this permanently deletes or not...
	end

    GAME:WaitFrames(120)
    SOUND:PlayFanfare("Fanfare/Item")
    UI:WaitShowVoiceOver("The Exploration Team Federation has sent a message...[pause=30]", -1)
    SOUND:PlayFanfare("Fanfare/LevelUp")
    UI:WaitShowVoiceOver("You have been chosen for their next exploration initiative!", -1)
    UI:WaitShowVoiceOver("You are tasked with colonizing a newly discovered region!", -1)
    UI:WaitShowVoiceOver("Before you go, however, you'll need to fill in some identification papers.", -1)
    UI:WaitShowVoiceOver("Shall we begin?", -1)
    GAME:WaitFrames(40)

    SOUND:PlayBGM("Welcome to the World of Pok√©mon!.ogg", true)]]
    GAME:FadeIn(40)
    GAME:WaitFrames(20)

    local CharacterMenu = CharacterSelectionMenu()
    local menu = CharacterMenu:new()
    while not menu.confirmed do
        UI:SetCustomMenu(menu:getFocusedWindow())
        UI:WaitForChoice()
    end

    GAME:CutsceneMode(false)

end

return intro_scene

